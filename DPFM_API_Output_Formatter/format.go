package dpfm_api_output_formatter

//丸々ずれてる
import (
	"data-platform-api-maintenance-order-reads-rmq-kube/DPFM_API_Caller/requests"
	"database/sql"
	"fmt"
)

func ConvertToHeader(rows *sql.Rows) (*[]Header, error) {
	defer rows.Close()
	header := make([]Header, 0)

	i := 0
	for rows.Next() {
		i++
		pm := &requests.Header{}

		err := rows.Scan(
			&pm.MaintenanceOrder,
			&pm.MaintOrderRoutingNumber,
			&pm.MaintenanceOrderType,
			&pm.MaintenanceOrderDesc,
			&pm.MaintOrdBasicStart,
			&pm.MaintOrdBasicEnd,
			&pm.MaintOrdBasicStartDate,
			&pm.MaintOrdBasicStartTime,
			&pm.MaintOrdBasicEndDate,
			&pm.MaintOrdBasicEndTime,
			&pm.MaintOrdSchedldBscStrt,
			&pm.MaintOrdSchedldBscEnd,
			&pm.ScheduledBasicStartDate,
			&pm.ScheduledBasicStartTime,
			&pm.ScheduledBasicEndDate,
			&pm.ScheduledBasicEndTime,
			&pm.MaintenanceNotification,
			&pm.OrdIsNotSchedldAutomatically,
			&pm.MainWorkCenterInternalID,
			&pm.MainWorkCenterTypeCode,
			&pm.MainWorkCenter,
			&pm.MainWorkCenterPlant,
			&pm.WorkCenterInternalID,
			&pm.WorkCenterTypeCode,
			&pm.WorkCenter,
			&pm.MaintenancePlanningPlant,
			&pm.MaintenancePlant,
			&pm.Assembly,
			&pm.MaintOrdProcessPhaseCode,
			&pm.MaintOrdProcessSubPhaseCode,
			&pm.BusinessArea,
			&pm.CompanyCode,
			&pm.CostCenter,
			&pm.ReferenceElement,
			&pm.FunctionalArea,
			&pm.AdditionalDeviceData,
			&pm.Equipment,
			&pm.EquipmentName,
			&pm.FunctionalLocation,
			&pm.MaintenanceOrderPlanningCode,
			&pm.MaintenancePlannerGroup,
			&pm.MaintenanceActivityType,
			&pm.MaintPriority,
			&pm.MaintPriorityType,
			&pm.OrderProcessingGroup,
			&pm.ProfitCenter,
			&pm.ResponsibleCostCenter,
			&pm.MaintenanceRevision,
			&pm.SerialNumber,
			&pm.SuperiorProjectNetwork,
			&pm.OperationSystemCondition,
			&pm.Project,
			&pm.ControllingObjectClass,
			&pm.MaintenanceOrderInternalID,
			&pm.MaintenanceObjectList,
			&pm.MaintObjectLocAcctAssgmtNmbr,
			&pm.AssetLocation,
			&pm.AssetRoom,
			&pm.PlantSection,
			&pm.BasicSchedulingType,
			&pm.LatestAcceptableCompletionDate,
			&pm.MaintOrdPersonResponsible,
			&pm.LastChange,
			&pm.ControllingSettlementProfile,
			&pm.SystemStatusText,
			&pm.UserStatusText,
			&pm.TechnicalObject,
			&pm.TechnicalObjectLabel,
			&pm.TechObjIsEquipOrFuncnlLoc,
		)
		if err != nil {
			fmt.Printf("err = %+v \n", err)
			return &header, err
		}

		data := pm
		header = append(header, Header{
			MaintenanceOrder:               data.MaintenanceOrder,
			MaintOrderRoutingNumber:        data.MaintOrderRoutingNumber,
			MaintenanceOrderType:           data.MaintenanceOrderType,
			MaintenanceOrderDesc:           data.MaintenanceOrderDesc,
			MaintOrdBasicStart:             data.MaintOrdBasicStart,
			MaintOrdBasicEnd:               data.MaintOrdBasicEnd,
			MaintOrdBasicStartDate:         data.MaintOrdBasicStartDate,
			MaintOrdBasicStartTime:         data.MaintOrdBasicStartTime,
			MaintOrdBasicEndDate:           data.MaintOrdBasicEndDate,
			MaintOrdBasicEndTime:           data.MaintOrdBasicEndTime,
			MaintOrdSchedldBscStrt:         data.MaintOrdSchedldBscStrt,
			MaintOrdSchedldBscEnd:          data.MaintOrdSchedldBscEnd,
			ScheduledBasicStartDate:        data.ScheduledBasicStartDate,
			ScheduledBasicStartTime:        data.ScheduledBasicStartTime,
			ScheduledBasicEndDate:          data.ScheduledBasicEndDate,
			ScheduledBasicEndTime:          data.ScheduledBasicEndTime,
			MaintenanceNotification:        data.MaintenanceNotification,
			OrdIsNotSchedldAutomatically:   data.OrdIsNotSchedldAutomatically,
			MainWorkCenterInternalID:       data.MainWorkCenterInternalID,
			MainWorkCenterTypeCode:         data.MainWorkCenterTypeCode,
			MainWorkCenter:                 data.MainWorkCenter,
			MainWorkCenterPlant:            data.MainWorkCenterPlant,
			WorkCenterInternalID:           data.WorkCenterInternalID,
			WorkCenterTypeCode:             data.WorkCenterTypeCode,
			WorkCenter:                     data.WorkCenter,
			MaintenancePlanningPlant:       data.MaintenancePlanningPlant,
			MaintenancePlant:               data.MaintenancePlant,
			Assembly:                       data.Assembly,
			MaintOrdProcessPhaseCode:       data.MaintOrdProcessPhaseCode,
			MaintOrdProcessSubPhaseCode:    data.MaintOrdProcessSubPhaseCode,
			BusinessArea:                   data.BusinessArea,
			CompanyCode:                    data.CompanyCode,
			CostCenter:                     data.CostCenter,
			ReferenceElement:               data.ReferenceElement,
			FunctionalArea:                 data.FunctionalArea,
			AdditionalDeviceData:           data.AdditionalDeviceData,
			Equipment:                      data.Equipment,
			EquipmentName:                  data.EquipmentName,
			FunctionalLocation:             data.FunctionalLocation,
			MaintenanceOrderPlanningCode:   data.MaintenanceOrderPlanningCode,
			MaintenancePlannerGroup:        data.MaintenancePlannerGroup,
			MaintenanceActivityType:        data.MaintenanceActivityType,
			MaintPriority:                  data.MaintPriority,
			MaintPriorityType:              data.MaintPriorityType,
			OrderProcessingGroup:           data.OrderProcessingGroup,
			ProfitCenter:                   data.ProfitCenter,
			ResponsibleCostCenter:          data.ResponsibleCostCenter,
			MaintenanceRevision:            data.MaintenanceRevision,
			SerialNumber:                   data.SerialNumber,
			SuperiorProjectNetwork:         data.SuperiorProjectNetwork,
			OperationSystemCondition:       data.OperationSystemCondition,
			Project:                        data.Project,
			ControllingObjectClass:         data.ControllingObjectClass,
			MaintenanceOrderInternalID:     data.MaintenanceOrderInternalID,
			MaintenanceObjectList:          data.MaintenanceObjectList,
			MaintObjectLocAcctAssgmtNmbr:   data.MaintObjectLocAcctAssgmtNmbr,
			AssetLocation:                  data.AssetLocation,
			AssetRoom:                      data.AssetRoom,
			PlantSection:                   data.PlantSection,
			BasicSchedulingType:            data.BasicSchedulingType,
			LatestAcceptableCompletionDate: data.LatestAcceptableCompletionDate,
			MaintOrdPersonResponsible:      data.MaintOrdPersonResponsible,
			LastChange:                     data.LastChange,
			ControllingSettlementProfile:   data.ControllingSettlementProfile,
			SystemStatusText:               data.SystemStatusText,
			UserStatusText:                 data.UserStatusText,
			TechnicalObject:                data.TechnicalObject,
			TechnicalObjectLabel:           data.TechnicalObjectLabel,
			TechObjIsEquipOrFuncnlLoc:      data.TechObjIsEquipOrFuncnlLoc,
		})
	}
	if i == 0 {
		fmt.Printf("DBに対象のレコードが存在しません。")
		return &header, nil
	}

	return &header, nil
}

func ConvertToObjectListItem(rows *sql.Rows) (*[]ObjectListItem, error) {
	defer rows.Close()
	objectListItem := make([]ObjectListItem, 0)

	i := 0
	for rows.Next() {
		i++
		pm := &requests.ObjectListItem{}

		err := rows.Scan(
			&pm.MaintenanceOrder,
			&pm.MaintenanceOrderObjectList,
			&pm.MaintenanceObjectListItem,
			&pm.Equipment,
			&pm.MaintenanceNotification,
			&pm.Assembly,
			&pm.Product,
			&pm.SerialNumber,
			&pm.UniqueItemIdentifier,
			&pm.FunctionalLocation,
			&pm.MaintObjectListItemSequence,
		)
		if err != nil {
			fmt.Printf("err = %+v \n", err)
			return &objectListItem, nil
		}

		data := pm
		objectListItem = append(objectListItem, ObjectListItem{
			MaintenanceOrder:            data.MaintenanceOrder,
			MaintenanceOrderObjectList:  data.MaintenanceOrderObjectList,
			MaintenanceObjectListItem:   data.MaintenanceObjectListItem,
			Equipment:                   data.Equipment,
			MaintenanceNotification:     data.MaintenanceNotification,
			Assembly:                    data.Assembly,
			Product:                     data.Product,
			SerialNumber:                data.SerialNumber,
			UniqueItemIdentifier:        data.UniqueItemIdentifier,
			FunctionalLocation:          data.FunctionalLocation,
			MaintObjectListItemSequence: data.MaintObjectListItemSequence,
		})
	}

	return &objectListItem, nil
}

func ConvertToOperationComponent(rows *sql.Rows) (*[]OperationComponent, error) {
	defer rows.Close()
	operationcomponent := make([]OperationComponent, 0)

	i := 0
	for rows.Next() {
		i++
		pm := &requests.OperationComponent{}

		err := rows.Scan(
			&pm.MaenanceOrder,
			&pm.MaenanceOrderComponent,
			&pm.Reservation,
			&pm.ReservationItem,
			&pm.ReservationType,
			&pm.MaOrderRoutingNumber,
			&pm.MaOrderOperationCounter,
			&pm.Product,
			&pm.MaOrdOperationComponentText,
			&pm.MaOrdOpCompRequiredQuantity,
			&pm.BaseUnit,
			&pm.QuantityInUnitOfEntry,
			&pm.UnitOfEntry,
			&pm.RequirementDate,
			&pm.RequirementTime,
			&pm.Supplier,
			&pm.Plant,
			&pm.StorageLocation,
			&pm.MaOrdOpCompItemCategory,
			&pm.GoodsMovementType,
			&pm.ReservationIsFinallyIssued,
			&pm.ProductGroup,
			&pm.ProductTypeCode,
			&pm.ServicePerformer,
			&pm.PerformancePeriodStartDateTime,
			&pm.PerformancePeriodStartDate,
			&pm.PerformancePeriodEndDate,
			&pm.PerformancePeriodEndDateTime,
			&pm.PerformancePeriodStartTime,
			&pm.PerformancePeriodEndTime,
			&pm.LeanServiceDuration,
			&pm.LeanServiceDurationUnit,
			&pm.DistributionFunction,
			&pm.SrvcSchedgIsAlignedWthOpWrkCtr,
			&pm.MaOrderCompDebitCreditCode,
			&pm.GoodsMovementIsAllowed,
			&pm.MaenanceOrderComponentBatch,
			&pm.QuantityIsFixed,
			&pm.MaOrdOpComponentGLAccount,
			&pm.MaOrdOpCompCostingRelevancy,
			&pm.MaCompAltvProdUsgeRateInPct,
			&pm.MaOrderOpComponentSortText,
			&pm.MaOrdOpCompIsBulkProduct,
			&pm.MaterialProvisionType,
			&pm.MaOrdOpCompAssgdWBSElmnt,
			&pm.MaOrderOpComponentPrice,
			&pm.MaOrdOpComponentCurrency,
			&pm.MatlCompIsMarkedForBackflush,
			&pm.PurchasingGroup,
			&pm.DeliveryTimeInDays,
			&pm.MaOrdOpCompGdsRecipientName,
			&pm.MaOrdOpCompUnloadingPtTxt,
			&pm.GoodsReceiptDurationInWorkDays,
			&pm.PurchasingInfoRecord,
			&pm.OperationLeadTimeOffset,
			&pm.OpsLeadTimeOffsetUnit,
			&pm.MaOrdOpCompRequisitioner,
			&pm.MaOrdOpCompProcmtTrckgNmbr,
			&pm.ResponsiblePurchaseOrg,
			&pm.MaOrdOpCompSpecialStockType,
			&pm.VariableSizeDimension1,
			&pm.VariableSizeDimensionUnit,
			&pm.VariableSizeCompFormulaKey,
			&pm.VariableSizeDimension2,
			&pm.NumberOfVariableSizeItem,
			&pm.VariableSizeDimension3,
			&pm.VariableSizeItemQuantity,
			&pm.VariableSizeComponentUnit,
			&pm.RqmtDateIsEnteredManually,
			&pm.SupplierProduct,
			&pm.MaOrdCompPurOutlineAgrmtItm,
			&pm.MaOrderComponenternalID,
			&pm.PurchaseRequisition,
			&pm.PurchaseRequisitionItem,
			&pm.OverallLimitAmount,
			&pm.ExpectedOverallLimitAmount,
		)
		if err != nil {
			fmt.Printf("err = %+v \n", err)
			return &operationcomponent, nil
		}

		data := pm
		operationcomponent = append(operationcomponent, OperationComponent{
			MaenanceOrder:                  data.MaenanceOrder,
			MaenanceOrderComponent:         data.MaenanceOrderComponent,
			Reservation:                    data.Reservation,
			ReservationItem:                data.ReservationItem,
			ReservationType:                data.ReservationType,
			MaOrderRoutingNumber:           data.MaOrderRoutingNumber,
			MaOrderOperationCounter:        data.MaOrderOperationCounter,
			Product:                        data.Product,
			MaOrdOperationComponentText:    data.MaOrdOperationComponentText,
			MaOrdOpCompRequiredQuantity:    data.MaOrdOpCompRequiredQuantity,
			BaseUnit:                       data.BaseUnit,
			QuantityInUnitOfEntry:          data.QuantityInUnitOfEntry,
			UnitOfEntry:                    data.UnitOfEntry,
			RequirementDate:                data.RequirementDate,
			RequirementTime:                data.RequirementTime,
			Supplier:                       data.Supplier,
			Plant:                          data.Plant,
			StorageLocation:                data.StorageLocation,
			MaOrdOpCompItemCategory:        data.MaOrdOpCompItemCategory,
			GoodsMovementType:              data.GoodsMovementType,
			ReservationIsFinallyIssued:     data.ReservationIsFinallyIssued,
			ProductGroup:                   data.ProductGroup,
			ProductTypeCode:                data.ProductTypeCode,
			ServicePerformer:               data.ServicePerformer,
			PerformancePeriodStartDateTime: data.PerformancePeriodStartDateTime,
			PerformancePeriodStartDate:     data.PerformancePeriodStartDate,
			PerformancePeriodEndDate:       data.PerformancePeriodEndDate,
			PerformancePeriodEndDateTime:   data.PerformancePeriodEndDateTime,
			PerformancePeriodStartTime:     data.PerformancePeriodStartTime,
			PerformancePeriodEndTime:       data.PerformancePeriodEndTime,
			LeanServiceDuration:            data.LeanServiceDuration,
			LeanServiceDurationUnit:        data.LeanServiceDurationUnit,
			DistributionFunction:           data.DistributionFunction,
			SrvcSchedgIsAlignedWthOpWrkCtr: data.SrvcSchedgIsAlignedWthOpWrkCtr,
			MaOrderCompDebitCreditCode:     data.MaOrderCompDebitCreditCode,
			GoodsMovementIsAllowed:         data.GoodsMovementIsAllowed,
			MaenanceOrderComponentBatch:    data.MaenanceOrderComponentBatch,
			QuantityIsFixed:                data.QuantityIsFixed,
			MaOrdOpComponentGLAccount:      data.MaOrdOpComponentGLAccount,
			MaOrdOpCompCostingRelevancy:    data.MaOrdOpCompCostingRelevancy,
			MaCompAltvProdUsgeRateInPct:    data.MaCompAltvProdUsgeRateInPct,
			MaOrderOpComponentSortText:     data.MaOrderOpComponentSortText,
			MaOrdOpCompIsBulkProduct:       data.MaOrdOpCompIsBulkProduct,
			MaterialProvisionType:          data.MaterialProvisionType,
			MaOrdOpCompAssgdWBSElmnt:       data.MaOrdOpCompAssgdWBSElmnt,
			MaOrderOpComponentPrice:        data.MaOrderOpComponentPrice,
			MaOrdOpComponentCurrency:       data.MaOrdOpComponentCurrency,
			MatlCompIsMarkedForBackflush:   data.MatlCompIsMarkedForBackflush,
			PurchasingGroup:                data.PurchasingGroup,
			DeliveryTimeInDays:             data.DeliveryTimeInDays,
			MaOrdOpCompGdsRecipientName:    data.MaOrdOpCompGdsRecipientName,
			MaOrdOpCompUnloadingPtTxt:      data.MaOrdOpCompUnloadingPtTxt,
			GoodsReceiptDurationInWorkDays: data.GoodsReceiptDurationInWorkDays,
			PurchasingInfoRecord:           data.PurchasingInfoRecord,
			OperationLeadTimeOffset:        data.OperationLeadTimeOffset,
			OpsLeadTimeOffsetUnit:          data.OpsLeadTimeOffsetUnit,
			MaOrdOpCompRequisitioner:       data.MaOrdOpCompRequisitioner,
			MaOrdOpCompProcmtTrckgNmbr:     data.MaOrdOpCompProcmtTrckgNmbr,
			ResponsiblePurchaseOrg:         data.ResponsiblePurchaseOrg,
			MaOrdOpCompSpecialStockType:    data.MaOrdOpCompSpecialStockType,
			VariableSizeDimension1:         data.VariableSizeDimension1,
			VariableSizeDimensionUnit:      data.VariableSizeDimensionUnit,
			VariableSizeCompFormulaKey:     data.VariableSizeCompFormulaKey,
			VariableSizeDimension2:         data.VariableSizeDimension2,
			NumberOfVariableSizeItem:       data.NumberOfVariableSizeItem,
			VariableSizeDimension3:         data.VariableSizeDimension3,
			VariableSizeItemQuantity:       data.VariableSizeItemQuantity,
			VariableSizeComponentUnit:      data.VariableSizeComponentUnit,
			RqmtDateIsEnteredManually:      data.RqmtDateIsEnteredManually,
			SupplierProduct:                data.SupplierProduct,
			MaOrdCompPurOutlineAgrmtItm:    data.MaOrdCompPurOutlineAgrmtItm,
			MaOrderComponenternalID:        data.MaOrderComponenternalID,
			PurchaseRequisition:            data.PurchaseRequisition,
			PurchaseRequisitionItem:        data.PurchaseRequisitionItem,
			OverallLimitAmount:             data.OverallLimitAmount,
			ExpectedOverallLimitAmount:     data.ExpectedOverallLimitAmount,
		})
	}

	return &operationcomponent, nil
}
func ConvertToOperation(rows *sql.Rows) (*[]Operation, error) {
	defer rows.Close()
	operation := make([]Operation, 0)

	i := 0
	for rows.Next() {
		i++
		pm := &requests.Operation{}

		err := rows.Scan(
			&pm.MaintenanceOrder,
			&pm.MaintenanceOrderOperation,
			&pm.MaintenanceOrderSubOperation,
			&pm.OperationControlKey,
			&pm.OperationWorkCenterInternalID,
			&pm.WorkCenter,
			&pm.Plant,
			&pm.OperationStandardTextCode,
			&pm.OperationDescription,
			&pm.MaintOrderRoutingNumber,
			&pm.MaintenanceOrderRoutingNode,
			&pm.SuperiorOperationInternalID,
			&pm.OperationWorkCenterTypeCode,
			&pm.Language,
			&pm.NumberOfTimeTickets,
			&pm.OperationPurgInfoRecdSearchTxt,
			&pm.OperationSupplier,
			&pm.CostElement,
			&pm.OperationPurchasingInfoRecord,
			&pm.PurchasingOrganization,
			&pm.PurchasingGroup,
			&pm.ProductGroup,
			&pm.OpPurchaseOutlineAgreement,
			&pm.OpPurchaseOutlineAgreementItem,
			&pm.OperationRequisitionerName,
			&pm.OperationTrackingNumber,
			&pm.NumberOfCapacities,
			&pm.OperationWorkPercent,
			&pm.OperationCalculationControl,
			&pm.ActivityType,
			&pm.OperationSystemCondition,
			&pm.OperationGoodsRecipientName,
			&pm.OperationUnloadingPointName,
			&pm.OperationPersonResponsible,
			&pm.DeliveryTimeInDays,
			&pm.MaintOrderOperationDuration,
			&pm.MaintOrdOperationDurationUnit,
			&pm.OpBscStartDateConstraintType,
			&pm.OpBscEndDateConstraintType,
			&pm.MaintOrdOperationWorkDuration,
			&pm.MaintOrdOpWorkDurationUnit,
			&pm.MaintOrdOpConstraintStrtDteTme,
			&pm.ConstraintDateForBscStartDate,
			&pm.ConstraintTimeForBscStartTime,
			&pm.MaintOrdOpCstrtFinishDteTme,
			&pm.ConstraintDateForBscFinishDate,
			&pm.ConstraintTimeForBscFinishTime,
			&pm.MaintOrdOperationExecutionRate,
			&pm.Equipment,
			&pm.FunctionalLocation,
			&pm.MaintenanceActivityType,
			&pm.BusinessArea,
			&pm.ProfitCenter,
			&pm.FunctionalArea,
			&pm.MaintControllingObjectClass,
			&pm.WrkCtrIntCapRqmtsDistr,
			&pm.MaintOrdOperationOverheadCode,
			&pm.MaintOrderOperationQuantity,
			&pm.MaintOrdOperationQuantityUnit,
			&pm.Assembly,
			&pm.MaintOperationExecStageCode,
			&pm.WBSElement,
			&pm.IsMarkedForDeletion,
			&pm.MaintOrderOperationInternalID,
			&pm.MaintenanceObjectListItem,
			&pm.PurchaseRequisition,
			&pm.PurchaseRequisitionItem,
			&pm.OpErlstSchedldExecStrtDte,
			&pm.OpErlstSchedldExecStrtTme,
			&pm.OpErlstSchedldExecEndDte,
			&pm.OpErlstSchedldExecEndTme,
			&pm.OpLtstSchedldExecStrtDte,
			&pm.OpLtstSchedldExecStrtTme,
			&pm.OpLtstSchedldExecEndDte,
			&pm.OpLtstSchedldExecEndTme,
			&pm.OpActualExecutionStartDate,
			&pm.OpActualExecutionStartTime,
			&pm.OpActualExecutionEndDate,
			&pm.OpActualExecutionEndTime,
			&pm.ForecastWorkQuantity,
			&pm.ActualWorkQuantity,
			&pm.MaintOrdOpProcessPhaseCode,
			&pm.MaintOrdOpProcessSubPhaseCode,
			&pm.SystemStatusText,
			&pm.UserStatusText,
		)
		if err != nil {
			fmt.Printf("err = %+v \n", err)
			return &operation, nil
		}

		data := pm
		operation = append(operation, Operation{
			MaintenanceOrder:               data.MaintenanceOrder,
			MaintenanceOrderOperation:      data.MaintenanceOrderOperation,
			MaintenanceOrderSubOperation:   data.MaintenanceOrderSubOperation,
			OperationControlKey:            data.OperationControlKey,
			OperationWorkCenterInternalID:  data.OperationWorkCenterInternalID,
			WorkCenter:                     data.WorkCenter,
			Plant:                          data.Plant,
			OperationStandardTextCode:      data.OperationStandardTextCode,
			OperationDescription:           data.OperationDescription,
			MaintOrderRoutingNumber:        data.MaintOrderRoutingNumber,
			MaintenanceOrderRoutingNode:    data.MaintenanceOrderRoutingNode,
			SuperiorOperationInternalID:    data.SuperiorOperationInternalID,
			OperationWorkCenterTypeCode:    data.OperationWorkCenterTypeCode,
			Language:                       data.Language,
			NumberOfTimeTickets:            data.NumberOfTimeTickets,
			OperationPurgInfoRecdSearchTxt: data.OperationPurgInfoRecdSearchTxt,
			OperationSupplier:              data.OperationSupplier,
			CostElement:                    data.CostElement,
			OperationPurchasingInfoRecord:  data.OperationPurchasingInfoRecord,
			PurchasingOrganization:         data.PurchasingOrganization,
			PurchasingGroup:                data.PurchasingGroup,
			ProductGroup:                   data.ProductGroup,
			OpPurchaseOutlineAgreement:     data.OpPurchaseOutlineAgreement,
			OpPurchaseOutlineAgreementItem: data.OpPurchaseOutlineAgreementItem,
			OperationRequisitionerName:     data.OperationRequisitionerName,
			OperationTrackingNumber:        data.OperationTrackingNumber,
			NumberOfCapacities:             data.NumberOfCapacities,
			OperationWorkPercent:           data.OperationWorkPercent,
			OperationCalculationControl:    data.OperationCalculationControl,
			ActivityType:                   data.ActivityType,
			OperationSystemCondition:       data.OperationSystemCondition,
			OperationGoodsRecipientName:    data.OperationGoodsRecipientName,
			OperationUnloadingPointName:    data.OperationUnloadingPointName,
			OperationPersonResponsible:     data.OperationPersonResponsible,
			DeliveryTimeInDays:             data.DeliveryTimeInDays,
			MaintOrderOperationDuration:    data.MaintOrderOperationDuration,
			MaintOrdOperationDurationUnit:  data.MaintOrdOperationDurationUnit,
			OpBscStartDateConstraintType:   data.OpBscStartDateConstraintType,
			OpBscEndDateConstraintType:     data.OpBscEndDateConstraintType,
			MaintOrdOperationWorkDuration:  data.MaintOrdOperationWorkDuration,
			MaintOrdOpWorkDurationUnit:     data.MaintOrdOpWorkDurationUnit,
			MaintOrdOpConstraintStrtDteTme: data.MaintOrdOpConstraintStrtDteTme,
			ConstraintDateForBscStartDate:  data.ConstraintDateForBscStartDate,
			ConstraintTimeForBscStartTime:  data.ConstraintTimeForBscStartTime,
			MaintOrdOpCstrtFinishDteTme:    data.MaintOrdOpCstrtFinishDteTme,
			ConstraintDateForBscFinishDate: data.ConstraintDateForBscFinishDate,
			ConstraintTimeForBscFinishTime: data.ConstraintTimeForBscFinishTime,
			MaintOrdOperationExecutionRate: data.MaintOrdOperationExecutionRate,
			Equipment:                      data.Equipment,
			FunctionalLocation:             data.FunctionalLocation,
			MaintenanceActivityType:        data.MaintenanceActivityType,
			BusinessArea:                   data.BusinessArea,
			ProfitCenter:                   data.ProfitCenter,
			FunctionalArea:                 data.FunctionalArea,
			MaintControllingObjectClass:    data.MaintControllingObjectClass,
			WrkCtrIntCapRqmtsDistr:         data.WrkCtrIntCapRqmtsDistr,
			MaintOrdOperationOverheadCode:  data.MaintOrdOperationOverheadCode,
			MaintOrderOperationQuantity:    data.MaintOrderOperationQuantity,
			MaintOrdOperationQuantityUnit:  data.MaintOrdOperationQuantityUnit,
			Assembly:                       data.Assembly,
			MaintOperationExecStageCode:    data.MaintOperationExecStageCode,
			WBSElement:                     data.WBSElement,
			IsMarkedForDeletion:            data.IsMarkedForDeletion,
			MaintOrderOperationInternalID:  data.MaintOrderOperationInternalID,
			MaintenanceObjectListItem:      data.MaintenanceObjectListItem,
			PurchaseRequisition:            data.PurchaseRequisition,
			PurchaseRequisitionItem:        data.PurchaseRequisitionItem,
			OpErlstSchedldExecStrtDte:      data.OpErlstSchedldExecStrtDte,
			OpErlstSchedldExecStrtTme:      data.OpErlstSchedldExecStrtTme,
			OpErlstSchedldExecEndDte:       data.OpErlstSchedldExecEndDte,
			OpErlstSchedldExecEndTme:       data.OpErlstSchedldExecEndTme,
			OpLtstSchedldExecStrtDte:       data.OpLtstSchedldExecStrtDte,
			OpLtstSchedldExecStrtTme:       data.OpLtstSchedldExecStrtTme,
			OpLtstSchedldExecEndDte:        data.OpLtstSchedldExecEndDte,
			OpLtstSchedldExecEndTme:        data.OpLtstSchedldExecEndTme,
			OpActualExecutionStartDate:     data.OpActualExecutionStartDate,
			OpActualExecutionStartTime:     data.OpActualExecutionStartTime,
			OpActualExecutionEndDate:       data.OpActualExecutionEndDate,
			OpActualExecutionEndTime:       data.OpActualExecutionEndTime,
			ForecastWorkQuantity:           data.ForecastWorkQuantity,
			ActualWorkQuantity:             data.ActualWorkQuantity,
			MaintOrdOpProcessPhaseCode:     data.MaintOrdOpProcessPhaseCode,
			MaintOrdOpProcessSubPhaseCode:  data.MaintOrdOpProcessSubPhaseCode,
			SystemStatusText:               data.SystemStatusText,
			UserStatusText:                 data.UserStatusText,
		})
	}

	return &operation, nil
}
